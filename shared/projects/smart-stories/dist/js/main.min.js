(function() {
    scrollTo();
})();

function scrollTo() {
    const links = document.querySelectorAll('.scroll');
    links.forEach(each => (each.onclick = scrollAnchors));
}

function scrollAnchors(e, respond = null) {
    const distanceToTop = el => Math.floor(el.getBoundingClientRect().top);
    e.preventDefault();
    var targetID = (respond) ? respond.getAttribute('href') : this.getAttribute('href');
    const targetAnchor = document.querySelector(targetID);
    if (!targetAnchor) return;
    const originalTop = distanceToTop(targetAnchor);
    window.scrollBy({
        top: originalTop,
        left: 0,
        behavior: 'smooth'
    });
    const checkIfDone = setInterval(function() {
        const atBottom = window.innerHeight + window.pageYOffset >= document.body.offsetHeight - 2;
        if (distanceToTop(targetAnchor) === 0 || atBottom) {
            window.history.pushState('', '', targetID);
            clearInterval(checkIfDone);
        }
    }, 100);
}

ScrollReveal().reveal('.page .copy', { origin: 'bottom', distance: '20px', interval: 200, viewFactor: 0.2});


! function() {
    const e = window,
        t = document.documentElement;
    if (t.classList.remove("no-js"), t.classList.add("js"), document.body.classList.contains("has-animations")) {
        const e = window.sr = ScrollReveal();
        e.reveal('.feature-extended:nth-child(odd) .feature-extended-image, .timeline-item.left .timeline-content', {
            duration: 600,
            distance: '40px',
            easing: 'cubic-bezier(0.5, -0.01, 0, 1.005)',
            origin: 'left',
            viewFactor: 0.5
        })

        e.reveal('.feature-extended:nth-child(even) .feature-extended-image, .timeline-item.right .timeline-content', {
            duration: 600,
            distance: '40px',
            easing: 'cubic-bezier(0.5, -0.01, 0, 1.005)',
            interval: 100,
            origin: 'right',
            viewFactor: 0.5
        })

        e.reveal('.logos li', {
            delay: 300,
            duration: 1000,
            rotate: {
                y: 50
            },
            easing: 'cubic-bezier(0.215, 0.61, 0.355, 1)',
            interval: 150
        })

        e.reveal('.tabs-links li', {
            duration: 600,
            distance: '40px',
            easing: 'cubic-bezier(0.215, 0.61, 0.355, 1)',
            interval: 100,
            origin: 'bottom',
            viewFactor: 0.2
        })
        e.reveal(".feature, .testimonial", {
            duration: 600,
            distance: "20px",
            easing: "cubic-bezier(0.5, -0.01, 0, 1.005)",
            origin: "right",
            interval: 100
        }), e.reveal(".device-mockup, .copy img", {
            duration: 600,
            scale: ".95",
            easing: "cubic-bezier(0.5, -0.01, 0, 1.005)",
            viewFactor: .5
        }), e.reveal(".media-canvas", {
            duration: 600,
            scale: ".95",
            easing: "cubic-bezier(0.5, -0.01, 0, 1.005)",
            viewFactor: .5
        })
    }
    
    // Tabs component
    const tabLinksAll = document.getElementsByClassName('tab-link')
    
    if (tabLinksAll.length) {
        for (let i = 0; i < tabLinksAll.length; i++) {
          tabLinksAll[i].addEventListener('click', function (e) {
            e.preventDefault()
            let tabLinksContainer = tabLinksAll[i].parentNode.parentNode
            let tabPanels = tabLinksContainer.nextElementSibling.getElementsByClassName('tab-panel')
            let tabLinks = tabLinksContainer.getElementsByClassName('tab-link')
            // Remove is-active class from all links and panels
            for (let i = 0; i < tabLinks.length; i++) {
              tabLinks[i].classList.remove('is-active')
            }
            for (let i = 0; i < tabPanels.length; i++) {
              tabPanels[i].classList.remove('is-active')
            }
            // Get the ID of panel to display
            let tabID = this.getAttribute('href')
            // Add is-active class to matching link and panel
            tabLinksAll[i].classList.add('is-active')
            document.querySelector(tabID).classList.add('is-active')
          })
        }
    }
    
    const n = document.querySelector(".device-mockup");

    function i() {
        n.classList.add("has-loaded")
    }
    n.complete ? i() : n.addEventListener("load", i);
    const s = document.querySelector(".features"),
        a = s.querySelector(".section-title"),
        o = document.querySelector(".feature-inner");

    function r() {
        let e = s.querySelector(".features-inner").getBoundingClientRect().left,
            t = o.getBoundingClientRect().left,
            n = parseInt(t - e);
        a.style.marginLeft = t > e ? `${n}px` : 0
    }
    r(), e.addEventListener("resize", r);
    const c = document.querySelectorAll(".is-moving-object");
    let l = 0,
        d = 0,
        u = 0,
        g = 0,
        f = 0,
        m = t.clientWidth,
        v = t.clientHeight;
    c && e.addEventListener("mousemove", function(e, t) {
        let n = null,
            i = t;
        return (...t) => {
            let s = Date.now();
            (!n || s - n >= i) && (n = s, e.apply(this, t))
        }
    }(function(t) {
        ! function(t, n) {
            l = t.pageX, d = t.pageY, u = e.scrollY, g = m / 2 - l, f = v / 2 - (d - u);
            for (let e = 0; e < n.length; e++) {
                const t = n[e].getAttribute("data-translating-factor") || 20,
                    i = n[e].getAttribute("data-rotating-factor") || 20,
                    s = n[e].getAttribute("data-perspective") || 500;
                let a = [];
                n[e].classList.contains("is-translating") && a.push("translate(" + g / t + "px, " + f / t + "px)"), n[e].classList.contains("is-rotating") && a.push("perspective(" + s + "px) rotateY(" + -g / i + "deg) rotateX(" + f / i + "deg)"), (n[e].classList.contains("is-translating") || n[e].classList.contains("is-rotating")) && (a = a.join(" "), n[e].style.transform = a, n[e].style.transition = "transform 1s ease-out", n[e].style.transformStyle = "preserve-3d", n[e].style.backfaceVisibility = "hidden")
            }
        }(t, c)
    }, 150))
}();